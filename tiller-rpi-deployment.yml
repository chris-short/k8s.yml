{
  "kind": "Deployment",
  "apiVersion": "extensions/v1beta1",
  "metadata": {
    "name": "tiller-rpi-deploy",
    "namespace": "kube-system",
    "selfLink": "/apis/extensions/v1beta1/namespaces/kube-system/deployments/tiller-rpi-deploy",
    "generation": 1,
    "labels": {
      "app": "helm",
      "name": "tiller"
    },
    "annotations": {
      "deployment.kubernetes.io/revision": "1"
    }
  },
  "spec": {
    "replicas": 1,
    "selector": {
      "matchLabels": {
        "app": "helm",
        "name": "tiller"
      }
    },
    "template": {
      "metadata": {
        "labels": {
          "app": "helm",
          "name": "tiller"
        }
      },
      "spec": {
        "containers": [
          {
            "name": "tiller",
            "image": "timotto/rpi-tiller",
            "ports": [
              {
                "name": "tiller",
                "containerPort": 44134,
                "protocol": "TCP"
              },
              {
                "name": "http",
                "containerPort": 44135,
                "protocol": "TCP"
              }
            ],
            "env": [
              {
                "name": "TILLER_NAMESPACE",
                "value": "kube-system"
              },
              {
                "name": "TILLER_HISTORY_MAX",
                "value": "0"
              }
            ],
            "resources": {},
            "livenessProbe": {
              "httpGet": {
                "path": "/liveness",
                "port": 44135,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 1,
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "readinessProbe": {
              "httpGet": {
                "path": "/readiness",
                "port": 44135,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 1,
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent"
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "serviceAccountName": "tiller",
        "serviceAccount": "tiller",
        "securityContext": {},
        "schedulerName": "default-scheduler"
      }
    },
    "strategy": {
      "type": "RollingUpdate",
      "rollingUpdate": {
        "maxUnavailable": 1,
        "maxSurge": 1
      }
    }
  }
}